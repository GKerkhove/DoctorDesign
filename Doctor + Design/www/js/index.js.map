{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/client/src/client/index.js"],"names":[],"mappings":"AAAA;;;;ACAA,IAAM,MAAM;;;AAEV,oCAAc;AACZ,SAAK,UAAL,GADY;GAFJ;;;;;;AASV,oCAAc;AACZ,aAAS,gBAAT,CAA0B,aAA1B,EAAyC,KAAK,aAAL,EAAoB,KAA7D,EADY;GATJ;;;;;;AAgBV,0CAAiB;AACf,QAAI,aAAJ,CAAkB,aAAlB,EADe;GAhBP;;;AAoBV,wCAAe,IAAI;AACjB,QAAI,gBAAgB,SAAS,cAAT,CAAwB,EAAxB,CAAhB,CADa;AAEjB,QAAI,mBAAmB,cAAc,aAAd,CAA4B,YAA5B,CAAnB,CAFa;AAGjB,QAAI,kBAAkB,cAAc,aAAd,CAA4B,WAA5B,CAAlB,CAHa;;AAKjB,qBAAiB,YAAjB,CAA8B,OAA9B,EAAuC,eAAvC,EALiB;AAMjB,oBAAgB,YAAhB,CAA6B,OAA7B,EAAsC,gBAAtC,EANiB;;AAQjB,YAAQ,GAAR,sBAA+B,EAA/B,EARiB;GApBT;CAAN;;AAgCN,OAAO,GAAP,GAAa,GAAb","file":"index.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","const app = {\r\n    // Application Constructor\r\n  initialize () {\r\n    this.bindEvents();\r\n  },\r\n    // Bind Event Listeners\r\n    //\r\n    // Bind any events that are required on startup. Common events are:\r\n    // 'load', 'deviceready', 'offline', and 'online'.\r\n  bindEvents () {\r\n    document.addEventListener('deviceready', this.onDeviceReady, false);\r\n  },\r\n    // deviceready Event Handler\r\n    //\r\n    // The scope of 'this' is the event. In order to call the 'receivedEvent'\r\n    // function, we must explicitly call 'app.receivedEvent(...);'\r\n  onDeviceReady () {\r\n    app.receivedEvent('deviceready');\r\n  },\r\n    // Update DOM on a Received Event\r\n  receivedEvent (id) {\r\n    var parentElement = document.getElementById(id);\r\n    var listeningElement = parentElement.querySelector('.listening');\r\n    var receivedElement = parentElement.querySelector('.received');\r\n\r\n    listeningElement.setAttribute('style', 'display:none;');\r\n    receivedElement.setAttribute('style', 'display:block;');\r\n\r\n    console.log(`Received Event: ${id}`);\r\n  }\r\n};\r\n\r\nglobal.app = app;\r\n"]}